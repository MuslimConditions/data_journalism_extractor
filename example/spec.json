{
    "modules": [
        {
            "name": "extractorMPs",
            "moduleType": "csvImporter",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/data/deputes.csv",
            "dataType": ["String", "String"],
            "fieldDelimiter": ";",
            "namedFields": ["nom", "twitter"]
        },
        {
            "name": "mongoDBHATVP",
            "moduleType": "mongoImporter",
            "dbName": "testdb",
            "collection": "publications",
            "requiredFields": ["lienPageTwitter", "denomination"]
        },
        {
            "name": "splitTwitterHATVP",
            "moduleType": "split",
            "source": "mongoDBHATVP",
            "delimiter": "/",
            "field": 0,
            "reduce": -1
        },
        {
            "name": "splitTwitterHATVP2",
            "moduleType": "split",
            "source": "splitTwitterHATVP",
            "delimiter": "\\?",
            "field": 1,
            "reduce": 0
        },
        {
            "name": "extractor_lex",
            "moduleType": "csvImporter",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/data/lex.csv",
            "dataType": ["String", "String"],
            "fieldDelimiter": ","
        },
        {
            "name": "split_lex",
            "moduleType": "split",
            "source": "extractor_lex",
            "delimiter": "|",
            "field": 2
        },
        {
            "name": "extractordb",
            "moduleType": "dbImporter",
            "dbUrl": "jdbc:postgresql://localhost/twitter",
            "fieldNames": ["rt_name","screen_name"],
            "dataType": ["String", "String"],
            "query": "select rt_name, screen_name from (select rt_name, uid from (select us.screen_name as rt_name, rt.sid from retweetedstatuses as rt join users as us on (rt.uid=us.uid)) as sub join checkedstatuses as ch on (sub.sid=ch.sid)) as subsub join users on (subsub.uid=users.uid);",
            "filterNull": true
        },
        {
            "name": "joinExtractorDBTwitterSplit",
            "moduleType": "join",
            "source1": "extractordb",
            "source2": "splitTwitterHATVP2",
            "field1": 1,
            "field2": 0,
            "leftFields": [0]
        },
        {
            "name": "joinExtractorDBMPs",
            "moduleType": "join",
            "source1": "extractordb",
            "source2": "extractorMPs",
            "field1": 1,
            "field2": 1,
            "leftFields": [0]
        },
        {
            "name": "joinDBHATVPMPs",
            "moduleType": "join",
            "source1": "joinExtractorDBTwitterSplit",
            "source2": "extractorMPs",
            "field1": 0,
            "field2": 1,
            "leftFields": [2],
            "rightFields": [0]
        },
        {
            "name": "joinDB1HATVP",
            "moduleType": "join",
            "source1": "joinExtractorDBMPs",
            "source2": "splitTwitterHATVP2",
            "field1": 0,
            "field2": 0,
            "leftFields": [1],
            "rightFields": [1]
        },
        {
            "name": "extractorWiki",
            "moduleType": "csvImporter",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/data/wiki.csv",
            "dataType": ["String", "String"],
            "quoteCharacter": "$",
            "fieldDelimiter": "|"
        },
        {
            "name": "tryExtractorWordSim",
            "moduleType": "extractorWordSim",
            "source1": "split_lex",
            "source2": "split_lex",
            "leftField": 2,
            "rightField": 2
        },
        {
            "name": "stringSimilarity",
            "moduleType": "stringSimilarity",
            "source1": "split_lex",
            "source2": "split_lex",
            "leftField": 0,
            "rightField": 0,
            "leftOutFields": [0],
            "rightOutFields": [0]
        },
        {
            "name": "mentionExtraction",
            "moduleType": "extractorLink",
            "source1": "extractorWiki",
            "source2": "mongoDBHATVP",
            "sourceExtract": 1,
            "targetExtract": 1
        },
        {
            "name": "projection1",
            "moduleType": "projection",
            "source": "mentionExtraction",
            "fields": [0, 3]
        },
        {
            "name": "output1",
            "moduleType": "csvOutput",
            "source": "projection1",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/output/output_mention_wiki.csv"
        },
        {
            "name": "output2",
            "moduleType": "csvOutput",
            "source": "joinDBHATVPMPs",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/output/output_dep_retweet_hatvp.csv"
        },
        {
            "name": "output3",
            "moduleType": "csvOutput",
            "source": "joinDB1HATVP",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/output/output_hatvp_retweet_dep.csv"
        },
        {
            "name": "globalUnion1",
            "moduleType": "union",
            "source1": "projection1",
            "source2": "joinDBHATVPMPs"
        },
        {
            "name": "globalUnion2",
            "moduleType": "union",
            "source1": "globalUnion1",
            "source2": "joinDB1HATVP"
        },
        {
            "name": "globCount",
            "moduleType": "countDistinct",
            "source": "globalUnion2",
            "fields": [0, 1]
        },
        {
            "name": "globOutput",
            "moduleType": "csvOutput",
            "source": "globCount",
            "path": "/Users/hugo/Work/limsi-inria/tests/data_journalism_extractor/example/output/output_all.csv"
        }
    ]
}